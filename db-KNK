drop database if exists MOK;
create database MOK;
use MOK;

drop table if exists User;
drop table if exists Studenti;
drop table if exists Lendet;
drop table if exists StafiAkademik;
drop table if exists Salla;
drop table if exists Drejtimi;
drop table if exists VitiAkademik;
drop table if exists Oraret;

use SMO;


create table VitiAkademik(
Id integer not null auto_increment,
Viti varchar(10),
primary key(Id)
);

create table Drejtimi(
Id integer not null auto_increment,
Emri varchar(40),
primary key(Id)
);

create table Studenti(
Id integer not null auto_increment,
Emri varchar(15),
Mbiemri varchar(15),
StudentId varchar(30),
Drejtimi integer,
Viti integer,
Primary Key(Id),
foreign key(Drejtimi) references drejtimi(ID),
foreign key(Viti) references vitiakademik(ID)
);

create table User(
Id integer not null,
Username varchar(100),
SaltedHash varchar(256),
Salted varchar(100),
primary key(Id),
foreign key(Id)references Studenti(Id)
);

create table Lendet(
Id integer not null auto_increment,
Emri varchar(50),
primary key(Id)
);

create table StafiAkademik(
Id integer not null auto_increment,
Emri varchar(30),
Mbiemri varchar(30),
Pozita varchar(50),
primary key(Id)
);

create table profesorUser(
Id integer not null,
Username varchar(100),
SaltedHash varchar(256),
Salted varchar(100),
primary key(Id),
foreign key(Id)references StafiAkademik(Id)
);

create table Salla(
Id integer not null auto_increment,
Emri varchar(10),
primary key(Id)
);

create table TeacherSubjects(
Id int not null auto_increment,
profesori int,
lenda int,
primary key(Id),
foreign key(profesori) references stafiakademik(Id),
foreign key(lenda) references lendet(Id)
);

create table Oraret(
Id integer not null auto_increment,
l_u varchar(20),
drejtimi varchar(40),
lenda varchar(50),
profesori varchar(61),
viti varchar(10),
grupi varchar(11),
salla varchar(10),
dita varchar(10),
KohaFillimit varchar(5),
primary key(Id)
);


 create table carry(Id int not null,
 CID varchar(20),
 primary key(Id)
 );
 
 
 
 create table ditet(
Id int not null auto_increment,
emri varchar(10),
primary key(Id)
);
 
 create table kohet(
Id int not null  auto_increment,
koha varchar(5),
primary key(Id)
);
 
 create table filtered(
Id integer not null auto_increment,
l_u varchar(20),
drejtimi varchar(40),
lenda varchar(50),
profesori varchar(61),
viti varchar(10),
salla varchar(10),
dita varchar(10),
KohaFillimit varchar(5),
primary key(Id)
);
 
 -- views

create view studentet as select a.Emri as Emri, a.Mbiemri as Mbiemri, a.StudentId as StudentId, b.Emri as Drejtimi, c.Viti as Viti,   from studenti a 
												join drejtimi b on (a.Drejtimi = b.Id)
												join vitiakademik c on (a.Viti = c.Id)
                                           
                                                
-- procedure

drop procedure if exists checkIfExists;
delimiter //
 create procedure checkIfExists(new_drejtimi varchar(40), new_viti varchar(10), new_salla varchar(10), new_dita varchar(10), new_koha varchar(5))
begin
if exists(select * from oraret where drejtimi = new_drejtimi and viti = new_viti  and salla = new_salla and dita = new_dita and KohaFillimit = new_koha) then
update carry set CID = 1 where id = 2;
 else 
update carry set CID = 0 where id = 2;
end if;
end //
delimiter //;


drop procedure if exists deleteFiltered;
delimiter //
 create procedure deleteFiltered()
begin
 SET SQL_SAFE_UPDATES = 0;
delete from filtered;
 SET SQL_SAFE_UPDATES = 1;
end //
delimiter //;



drop procedure if exists insertFiltered;
delimiter //
 create procedure insertFiltered(new_l_u varchar(20),new_drejtimi varchar(40),new_lenda varchar(50),new_profesori varchar(61),new_viti varchar(10),new_salla varchar(10),new_dita varchar(10),new_koha varchar(5))
begin
 INSERT INTO filtered(l_u,drejtimi,lenda,profesori,viti,salla,dita,KohaFillimit)values(new_l_u,new_drejtimi,new_lenda,new_profesori,new_viti,new_salla,new_dita,new_koha);
end //
delimiter //;


drop procedure if exists deleteStudent;
delimiter //
 create procedure deleteStudent(new_id int)
begin
 SET SQL_SAFE_UPDATES = 0;
 delete from user where Id = new_id;
delete from studenti where Id = new_id;
 SET SQL_SAFE_UPDATES = 1;
end //
delimiter //;




drop procedure if exists updateProfesori;
delimiter //
 create procedure updateProfesori(new_id int,new_emri varchar(30), new_mbiemri varchar(30), new_pozita  varchar(50))
begin
 SET SQL_SAFE_UPDATES = 0;
update stafiakademik set Emri = new_emri where Id = new_id;
update stafiakademik set Mbiemri = new_mbiemri where Id = new_id;
update stafiakademik set Pozita = new_pozita where Id = new_id;
 SET SQL_SAFE_UPDATES = 1;
end //
delimiter //;

drop procedure if exists profaBusy;
delimiter //
 create procedure profaBusy(new_dita varchar(10),new_koha varchar(5),new_profa varchar(61))
begin
if exists(select * from oraret where profesori = new_profa and dita = new_dita and KohaFillimit = new_koha) then
update carry set CID = 1 where id = 4;
 else 
update carry set CID = 0 where id = 4;
end if;
end //
delimiter //;


insert into Lendet(Emri) values
("Gjuhe Angleze"),
("Shkathtesi Komunikuese"),
("Gjuhe programuese"),
("Matematike 1"),
("Fizike 1:"),
("Bazat e elektronikes"),
("Algoritmet dhe struktura e te dhenave"),
("Qarqe digjitale"),
("Fizike 2"),
("Matematike 2"),
("Qarqet elektrike"),
("Bazat e te dhenave"),
("Elektronike"),
("Sinjale dhe sisteme"),
("Matematike 3K"),
("Interneti"),
("Programimi i orientuar ne objekte"),
("Programimi ne internet"),
("Rrjetat kompjuterike"),
("Siguria e te dhenave"),
("Komunikimi njeri-kompjuter"),
("Arkitektura e kompjutereve"),
("Menaxhimi i projekteve"),
("Matjet Elektrike"),
("Automatike"),
("Matematike 3E"),
("Materialet elektroteknike"),
("Centralet elektrike"),
("Instrumentacion mates"),
("Fushat dhe valet"),
("Makina elektrike 1"),
("Komponentet elektronike"),
("Elektroenergjetike"),
("Telekomunikacion"),
("Fushat dhe valet elektromagnetike"),
("Ndermarresi"),
("Mikroprocesoret dhe mikrokontrolleret"),
("Modeli i te dhenave dhe gjuhet e pyetesoreve"),
("Internet Security"),
("Inxhinieri Softuerike"),
("Sisteme Operative"),
("Data Mining"),
("Praktika e Rrjetave kompjuterike"),
("Sistemet e shperndara"), 
("Programimi i pajisjeve mobile"),
("Bazat e inteligjences artificiale"), 
("Information retrevial"),
("Praktika profesionale"),
("Instalimet elektrike"),
("Elektronika Energjetike"),
("Energjia dhe Mjedisi"),
("Stabilimentet Elektroenergjetike"),
("Makinat elektrike 2"),
("Bartja dhe shperndarja e energjise elektrike"),
("Aplikacionet softuerike ne SEE-Matlab"),
("Burimet e energjise se riperteritshme"),
("Dinamika e punes se centraleve elektrike"),
("Makinat Elektrike Speciale"),
("Ngasjet Elektrike"),
("Tregu i Energjise"),
("Mbrojtje Rele"),
("Sistemet digjitale te rregullimit"),
("Komunikimet ne automatike"),
("Dirigjuesit e programueshem logjik(PLC)"),
("Senzoret dhe aktuatoret"),
("Aktuatoret e mencur dhe ngasjet"),
("Senzoret e mencur"),
("Modelimi dhe simulimi"),
("Sistemet jolineare te rregullimit"),
("Rregullimi i proceseve kimike"),
("Proceset e vazhduara dhe grupore"),
("Rregullimi ne kohe reale"),
("Automatizimi i objekteve te banimit"),
("Bazat e robotikes"), 
("Komunikimet elektronike"),
("Instrumentacioni mates dhe DAQ"),
("Elektronika digjitale"),
("Optoelektronika"),
("Perpunimi digjital i sinjaleve"),
("Teknologjia e komunikimeve optike"),
("Mikroelektronika"),
("Projektimi i sistemeve elektronike me kompjuter"),
("Elektronika analoge"),
("Bazat e multimedias"),
("Bazat e robotikes"),
("Hyrja ne bioelektromagnetike"),
("Komunikimet mobile"),
("Mikrovale dhe antena"),
("Televizioni digjital"),
("Sistemet transmetuese"),
("Transmetimi i te dhenave"),
("Qarqet komunikuese analoge"),
("Sistemet e shperndara"),
("Protokollet komunikuese"),
("Sistemet komutuese"),
("Rrjetet telekomunikuese");

drop trigger if exists SMO.Insert_Into_Profesor_User_On_Insert_Into_Stafi_Akademik;
delimiter //
create trigger Insert_Into_Profesor_User_On_Insert_Into_Stafi_Akademik after insert on stafiakademik for each row
 begin
SET SQL_SAFE_UPDATES = 0;
insert into profesoruser(Id,Username,SaltedHash,Salted) values
(new.Id,new.Emri, "b7dd0f6b41c493aba29f21f897e5ff22869a138e57de0cef30124f951f2ef860" , "8XOPWMKGwHbc8sjIh5ysiFqL8ujZqg90zhhcxqn0aVRpQSwNSj0Lv6rKGOy3eSQh");

SET SQL_SAFE_UPDATES = 1;
 end //
delimiter //;

insert into stafiakademik (emri, mbiemri, pozita) values
("Blerim", "Rexha", "Profesor i rregullt"),
("Enver", "Hamiti", "Profesor i rregullt"),
("Luan", "Ahma", "Profesor i rregullt"),
("Lule", "Ahmedi", "Profesor i rregullt"),
("Marjan", "Dema", "Profesor i rregullt"),
("Sabrije", "Osmanaj", "Profesor i rregullt"),
("Bujar", "Krasniqi", "Profesor i asocuar"),
("Isak", "Shabani", "Profesor i asocuar"),
("Kadri", "Sylejmani", "Profesor i asocuar"),
("Milaim", "Zabeli", "Profesor i asocuar"),
("Mimoza", "Ibrani", "Profesor i asocuar"),
("Qamil", "Kabashi", "Profesor i asocuar"),
("Qefsere", "Gjonbalaj", "Profesor i asocuar"),
("Shqipe", "Lohaj", "Profesor i asocuar"),
("Arben", "Gjukaj", "Profesor asistent"),
("Avni", "Rexhepi", "Profesor asistent"),
("Bahri", "Prebeza", "Profesor asistent"),
("Dhurate", "Hyseni", "Profesor asistent"),
("Drilon", "Bunjaku", "Profesor asistent"),
("Hena", "Maloku Berzati", "Profesor asistent"),
("Lavdim", "Kurtaj", "Profesor asistent"),
("Valdete", "Rexhebeqaj-Hamiti", "Profesor asistent"),
("Valon", "Raca", "Profesor asistent"),
("Vezir", "Rexhepi", "Profesor asistent"),
("Vjosa", "Shatri", "Profesor asistent"),
("Zana", "Limani-Faziu", "Profesor asistent"),
("Adrian", "Ymeri", "Asistent"),
("Arben", "Mashkulli", "Asistent"),
("Blend", "Arifaj", "Asistent"),
("Blerta", "Selimaj-Haziri", "Asistent"),
("Daline", "Vranovci", "Asistent"),
("Enkele", "Rama", "Asistent"),
("Jeta", "Dobruna", "Asistent"),
("Kushtrim", "Prodrimqaku", "Asistent"),
("Labeat", "Arbneshi", "Asistent"),
("Mergim", "Hoti", "Asistent"),
("Nuri", "Berisha", "Asistent"),
("Petrit", "Emini", "Asistent"),
("Rreze", "Halili", "Asistent"),
("Valon", "Veliu", "Asistent"),
("Adnan", "Maxhuni", "Profesoret/Asistentet e angazhuar"),
("Arben", "Lekaj", "Profesoret/Asistentet e angazhuar"),
("Arbnor", "Halili", "Profesoret/Asistentet e angazhuar"),
("Dardan", "Shabani", "Profesoret/Asistentet e angazhuar"),
("Doruntine", "Berisha", "Profesoret/Asistentet e angazhuar"),
("Driton", "Statovci", "Profesoret/Asistentet e angazhuar"),
("Fatos", "Peci", "Profesoret/Asistentet e angazhuar"),
("Gazmend", "Pula", "Profesoret/Asistentet e angazhuar"),
("Idriz", "Smaili", "Profesoret/Asistentet e angazhuar"),
("Ilir", "Gashi", "Profesoret/Asistentet e angazhuar"),
("Isak", "Kerolli", "Profesoret/Asistentet e angazhuar"),
("Kadrije", "Simnica-Aliu", "Profesoret/Asistentet e angazhuar"),
("Nysret", "Avdiu", "Profesoret/Asistentet e angazhuar"),
("Nysret", "Musliu", "Profesoret/Asistentet e angazhuar"),
("Ramadan", "Plakolli", "Profesoret/Asistentet e angazhuar"),
("Salem", "Lepaja", "Profesoret/Asistentet e angazhuar"),
("Skender", "Ahmetaj", "Profesoret/Asistentet e angazhuar"),
("Vjollca", "Komoni", "Profesoret/Asistentet e angazhuar"),
("Yllka", "Delija", "Profesoret/Asistentet e angazhuar"),
("Yllka", "Kabashi", "Profesoret/Asistentet e angazhuar"),
("Zenun", "Kastrati", "Profesoret/Asistentet e angazhuar"),
("Besmir", "Sejdiu", "Profesoret/Asistentet e angazhuar"),
("Haxhi", "Dacaj", "Profesoret/Asistentet e angazhuar"),
("Sevdie", "Alshiqi", "Profesoret/Asistentet e angazhuar");

select * from stafiakademik; 

select * from lendet;

insert into salla (Emri) values
("A3"),
("A408"),
("A411"),
("201"),
("310"),
("311"),
("611"),
("621"),
("626"),
("629"),
("636"),
("745");



insert into Drejtimi(Emri)values
("Elektronikë,Automatikë dhe Robotikë"),
("Elektroenergjetikë"),
("Inxhinieri Kompjuterike dhe Softuerike"),
("Telekomunikacion");

insert into vitiakademik(Viti)values
("Viti 1"),
("Viti 2"),
("Viti 3");

insert into studenti (Emri, Mbiemri) value
("Admin","Admin");

insert into User(Id,Username,SaltedHash,Salted) value
(1,"admin","1966c0c9281ce8b3d199fe7c2b1a1f49b8e461b80e3a12dda06f0d214ff2ee5f","hsZxr8V2rZOPz6rlE4yfLoGxlIvHwVf36hsXH7XdZrkqjR3rVc8oklwDb1gWIuq0");

-- default data

insert into carry(id,CID)values(1,"defalut"),(2,"default"),(3,"0"),(4,"0");

insert into teachersubjects(profesori,lenda)values
(1,19),
(1, 20),
(1, 39),
(1, 40),
(1, 43),
(2, 6),
(2, 11),
(2, 34),
(2, 88),
(2, 92),
(3, 6),
(3, 11),
(3, 35),
(4, 12),
(4, 38),
(4, 42),
(4, 47),
(5, 4),
(5, 10),
(6, 8),
(6, 77),
(7, 91),
(7, 95),
(8, 17),
(8, 21),
(8, 41),
(8, 93),
(9, 3),
(9, 7),
(10, 13),
(10, 80),
(10, 81),
(11, 35),
(11, 96),
(12, 13),
(12, 65),
(12, 76),
(13, 4),
(13, 10),
(13, 15),
(14, 4),
(14, 10),
(14, 26),
(16, 3),
(16, 7),
(17, 27),
(17, 76),
(17, 28),
(17, 48),
(17, 60),
(18, 16),
(18, 18),
(18, 41),
(19, 37),
(19, 62),
(19, 14),
(20, 6),
(20, 11),
(21, 37),
(21, 25),
(21, 74),
(22, 4),
(22, 10),
(23, 22),
(23, 18),
(25, 6),
(25, 11),
(25, 14),
(27, 3),
(27, 7),
(28, 66),
(28, 70),
(29, 17),
(29, 21),
(29, 43),
(30, 4),
(30, 10),
(30, 15),
(31, 8),
(31, 12),
(31, 18),
(31, 41),
(32, 8),
(32, 13),
(33, 6),
(33, 11),
(33, 34),
(35, 3),
(35, 7),
(36, 20),
(36, 19),
(36, 39),
(37, 33),
(37, 50),
(37, 52),
(39, 6),
(39, 11),
(39, 35),
(40, 5),
(40, 9),
(44, 3),
(44, 7),
(44, 16),
(45, 6),
(45, 11),
(48, 1),
(48, 33),
(50, 90),
(51, 8),
(51, 13),
(55, 13),
(57, 5),
(57, 9),
(59, 5),
(59, 9),
(60, 5),
(60, 9),
(62, 3),
(62, 7),
(62, 12),
(63, 4),
(63, 10),
(64, 23);

insert into ditet(emri)values
("E hëne"),
("E marte"),
("E mërkure"),
("E enjëte"),
("E premte"),
("E shtune");

insert into kohet(koha)values
("07"),
("08"),
("09"),
("10"),
("11"),
("12"),
("13"),
("14"),
("15"),
("16");
